// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserLifestyle {
  SEDENTARY   @map("sedentary")
  ACTIVE_LOW  @map("active_low")
  ACTIVE      @map("active")
  ACTIVE_HIGH @map("active_high")
}

model User {
  id              Int              @id @default(autoincrement())
  email           String           @unique
  firstName       String
  lastName        String
  password        String
  personalDetails PersonalDetails?

  meals EatenMeal[]

  @@map("users")
}

model PersonalDetails {
  id        Int           @id @default(autoincrement())
  height    Float
  weight    Float
  lifestyle UserLifestyle

  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int  @unique

  @@map("personal_details")
}

model Meal {
  id Int @id @default(autoincrement())

  name          String
  image         String?
  grams         Float   @default(100)
  calories      Float
  proteins      Float
  carbohydrates Float
  fats          Float

  eatenMeals EatenMeal[]

  @@map("meals")
}

model EatenMeal {
  id    Int   @id @default(autoincrement())
  value Float

  mealId Int  @map("meal_id")
  meal   Meal @relation(fields: [mealId], references: [id], onDelete: Cascade)
  userId Int  @map("user_id")
  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")

  @@map("eaten_meals")
}
